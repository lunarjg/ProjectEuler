from functools import lru_cache

def primes_below(n):
    sieve = [True] * n
    sieve[0:2] = [False, False]
    for i in range(2, int(n**0.5) + 1):
        if sieve[i]:
            for j in range(i*i, n, i):
                sieve[j] = False
    return set(i for i, is_prime in enumerate(sieve) if is_prime)

primes = sorted(primes_below(100000))

@lru_cache
def count_sum(n, limit) :
  limit = min(n, limit)
  if n == 0 :
    return 1
  elif n == 1 or limit == 1 :
    return 0
  else :
    return sum(count_sum(n-k, k) for k in primes if k <= limit)

n = 1
while count_sum(n, n-1) <= 5000 :
  n += 1
print(n)
