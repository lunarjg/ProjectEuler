from functools import cache

@cache
def primes_below(n):
    sieve = [True] * n
    sieve[0:2] = [False, False]
    for i in range(2, int(n**0.5) + 1):
        if sieve[i]:
            for j in range(i*i, n, i):
                sieve[j] = False
    return set(i for i, is_prime in enumerate(sieve) if is_prime)

def prime_fac_num(n) :
  p_facs = set()
  for i in primes_below(n) :
    while n % i == 0 :
      n = n / i 
      p_facs.add(i)
  return (len(p_facs))

n = 130000
while True :
  if prime_fac_num(n) == 4 :
    print(n)
    if all(prime_fac_num(n + i) == 4 for i in range(1,4)) :
      break
    else :
      n += 1
  else :
    n += 1

print(n)
