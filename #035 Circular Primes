def primes_below(n) :
  if n < 2 :
    return {}
  elif n == 3 :
    return {2}
  elif n == 4 :
    return {2, 3}
  else :
    nums = set([2] + [2*x + 1 for x in range(1, n // 2)])
    k = 1
    smallest_prime = list(nums)[k]
    while 2 * smallest_prime < n :
      smallest_prime_multiples = set(smallest_prime * x for x in range(2, n // smallest_prime + 1))
      nums -= smallest_prime_multiples
      k += 1
      smallest_prime = list(nums)[k]
    return nums

def circular_nums(n) :
  return set([int(str(n)[(i):] + str(n)[:i]) for i in range(len(str(n)))])

print(circular_nums(197))

primes = set(primes_below(1000000))
circular_primes = set()

for p in primes :
  if all(y in primes for y in circular_nums(p)) :
      circular_primes.add(p)

print(len(circular_primes))
