def primes_below(n):
    sieve = [True] * n
    sieve[0:2] = [False, False]
    for i in range(2, int(n**0.5) + 1):
        if sieve[i]:
            for j in range(i*i, n, i):
                sieve[j] = False
    return sorted(set(i for i, is_prime in enumerate(sieve) if is_prime))

n = 1000000
primes = sorted(primes_below(n))
isbreak = False
primes_num = len(primes)

def k_term_sum(k) :
  return sorted([sum(primes[i:i+k]) for i in range(primes_num - k)])

k = 23

while min(k_term_sum(k)) < 1000000 :
  prime_sums = [s for s in k_term_sum(k) if s < 1000000]
  for prime_sum in prime_sums :
    if prime_sum in primes :
      print(prime_sum, k)
      isbreak = True
      break
  k += 2
