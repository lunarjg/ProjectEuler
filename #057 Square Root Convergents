from functools import cache

def gcd(a,b) :
  if b == 0 :
    return a
  else :
    return gcd(b, a % b)

@cache
def n_th_fraction(n) :
  if n == 1 :
    return (3, 2)
  else :
    a = 2 * n_th_fraction(n-1)[1] + n_th_fraction(n-1)[0]
    b = n_th_fraction(n-1)[1] + n_th_fraction(n-1)[0]
    return (a // gcd(a,b), b // gcd(a,b))

result = 0

for n in range(1, 1000) :
  fraction = n_th_fraction(n)
  print(n)
  if len(str(fraction[0])) > len(str(fraction[1])) :
    result += 1

print(result)
