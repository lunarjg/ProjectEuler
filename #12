#find list primes smaller than n

import math

def primes_below(n) :
  nums = set([2] + [2*x + 1 for x in range(1, n // 2)])
  k = 1 
  smallest_prime = list(nums)[k]
  while 2 * smallest_prime < n :
    smallest_prime_multiples = set(smallest_prime * x for x in range(2, n // smallest_prime + 1))
    nums -= smallest_prime_multiples
    k+=1
    smallest_prime = list(nums)[k]
  return nums

def find_divisors_num(n) :
  divisors = {}
  for p in primes_below(math.isqrt(n)) :
    if n % p == 0 :
      divisors[p] = 0
      while n % p == 0 :
        divisors[p] += 1
        n = int(n / p)
  if not n == 1:
    divisors[n] = 1
  return math.prod(d + 1 for d in divisors.values()) - 1

n = 10

while not find_divisors_num(n) > 500 :
  n += 1
print(n)
# print(find_divisors_num(32487716))
