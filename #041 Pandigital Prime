max_pandigital_prime = 0
digits = [x for x in range(1, 10)]

def primes_below(n):
    sieve = [True] * n
    sieve[0:2] = [False, False]
    for i in range(2, int(n**0.5) + 1):
        if sieve[i]:
            for j in range(i*i, n, i):
                sieve[j] = False
    return set(i for i, is_prime in enumerate(sieve) if is_prime)

def permutation(nums) :
  nums = list(map(str, nums))
  nums.sort()
  if len(nums) == 1 :
    return nums
  else :
    return [x + y for x in nums for y in permutation([n for n in nums if n != x])]

for n in [4,7] :
  for num in permutation(digits[:n]) :
    if all(int(num) % i != 0 for i in range(2, int(int(num)**0.5) + 1)) and int(num) > max_pandigital_prime :
      max_pandigital_prime = int(num)

print(max_pandigital_prime)
