def primes_below(n):
    sieve = [True] * n
    sieve[0:2] = [False, False]
    for i in range(2, int(n**0.5) + 1):
        if sieve[i]:
            for j in range(i*i, n, i):
                sieve[j] = False
    return set(i for i, is_prime in enumerate(sieve) if is_prime)

primes = sorted(primes_below(1000000))

def is_truncatable(n) : 
  n = str(n)
  if len(n) == 1 : 
    return False
  else :
    if all(int(n[:i+1]) in primes for i in range(len(n))) and all(int(n[i:]) in primes for i in range(len(n))) :
      return True
    else :
      return False

truncatable_primes = []

while not len(truncatable_primes) == 11 :
  for p in primes : 
    if is_truncatable(p) :
      truncatable_primes.append(p)
      print(truncatable_primes)

print(sum(truncatable_primes))
