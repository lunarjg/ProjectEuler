import math
from functools import cache

def nth_layer_nums(n) :
  if n == 1 :
    return [1]
  else :
    a = (2*n -1) ** 2
    d = 2*(n-1)
    return [a-d, a-2*d, a-3*d]

@cache
def sum_layer_primes (n) :
  if n == 1 :
    return 0
  else :
    count = 0
    for num in nth_layer_nums(n) :
      if all(num % i != 0 for i in range(2, math.isqrt(num))) :
        count += 1
    return sum_layer_primes(n-1) + count

n = 300

while True :
  ratio = sum_layer_primes(n) / (4*(n-1) + 1)
  print(n, ratio)
  if ratio < 0.1 :
    print(n)
    break
  else :
    n += 1
