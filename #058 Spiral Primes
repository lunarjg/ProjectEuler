def primes_below(n):
    sieve = [True] * n
    sieve[0:2] = [False, False]
    for i in range(2, int(n**0.5) + 1):
        if sieve[i]:
            for j in range(i*i, n, i):
                sieve[j] = False
    return set(i for i, is_prime in enumerate(sieve) if is_prime)

def n_th_layer_primes(n) :
  if n == 1 :
    return 0
  else :
    a = (2*n -1) ** 2
    d = 2*(n-1)
    count = 0
    layer_nums = [a-d, a-2*d, a-3*d]

    for k in layer_nums :
      if k in primes_below(a-d +1) :
        count +=1
    return count

ratio = 1
n = 4

while ratio > 0.1 :
  ratio = sum(n_th_layer_primes(n) for n in range(1, n + 1)) / (4*(n-1) + 1)
  n += 1

print(n)
