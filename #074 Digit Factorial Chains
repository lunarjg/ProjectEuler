from functools import lru_cache
from numba import jit
import math

fac = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880]

@lru_cache(maxsize=None)
def digit_fac_sum(n):
    return sum(fac[int(d)] for d in str(n))

@lru_cache(maxsize=None)
def digit_fac(n):
  seen = []
  while n not in seen:
    seen.append(n)
    n = digit_fac_sum(n)
  return len(tuple(seen))

nums = [x for x in range(1,1000000)]
chain_num = 0

for n in range(1,1000000) :
  if digit_fac(n) == 60 :
    chain_num += 1

print(chain_num)
