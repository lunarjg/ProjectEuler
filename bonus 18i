def primes_below(n):
    sieve = [True] * n
    sieve[0:2] = [False, False]
    for i in range(2, int(n**0.5) + 1):
        if sieve[i]:
            for j in range(i*i, n, i):
                sieve[j] = False
    return sorted(set(i for i, is_prime in enumerate(sieve) if is_prime))

def R(p) :
  def f(x) :
    return int((x**3 - 3*x)/2)
  
  product = 4
  for x in range(1, int((p+1)/2)) :
    product *= (4 - f(x)**2) % p
  return product % p

print(R(1000000007))

# r_sum = 0

# for p in range(1000000009, 1100000000, 2) :
#   print(p)
#   primes = primes_below(int(1100000000 ** 0.5) + 1)
#   if all(p % i != 0 for i in primes) :
#     r_sum += R(p)

# print(r_sum)
